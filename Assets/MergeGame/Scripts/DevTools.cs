using UnityEngine;
using System.Collections.Generic;
using UnityEngine.SceneManagement;
using System;

public class DevTools : MonoBehaviour
{
    public void AddCoins()
    {
        UserProgress.Current.Coins += 50000;
        Debug.Log("üéÅ –î–æ–¥–∞–Ω–æ 50 000 –º–æ–Ω–µ—Ç");
    }

    public void UnlockAllMonsters()
    {
        string gameId = UserProgress.Current.CurrentGameId;
        GameState state = UserProgress.Current.GetGameState<GameState>(gameId);

        if (state == null)
        {
            Debug.LogWarning("‚ùå GameState –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
            return;
        }

        var presets = new List<MergePreset>(MergeController.Instance.GetPresets());
        int allLevels = presets.Count;
        state.MaxOpenLevel = allLevels;

        UserProgress.Current.SetGameState(gameId, state);
        UserProgress.Current.SaveGameState(gameId);

        MergeController.Instance.UpdateMaxOpenLevel(allLevels);

        Debug.Log($"üß© –í—ñ–¥–∫—Ä–∏—Ç–æ –≤—Å—ñ –º–æ–Ω—Å—Ç—Ä–∏ –¥–æ —Ä—ñ–≤–Ω—è {allLevels}");
    }

public void ResetProgress()
{
    string gameId = UserProgress.Current.CurrentGameId;

    // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π, –ø–æ—Ä–æ–∂–Ω—ñ–π GameState
    GameState state = new GameState();

    // 2. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π —Å—Ç–∞–Ω –≥—Ä–∏
    UserProgress.Current.SetGameState(gameId, state);
    UserProgress.Current.SaveGameState(gameId);

    // 3. –°–∫–∏–¥–∞—î–º–æ –º–æ–Ω–µ—Ç–∏
    UserProgress.Current.Coins = 0;

    // 4. –ü–æ–≤–Ω—ñ—Å—Ç—é —Å–∫–∏–¥–∞—î–º–æ MergeController
    var presets = new List<MergePreset>(MergeController.Instance.GetPresets());
    MergeController.Instance.UpdateState(
        0,                                // MaxOpenLevel = 0
        new long[presets.Count],          // –ü–æ—Ä–æ–∂–Ω—ñ —Ü—ñ–Ω–∏
        DateTime.UtcNow                  // –ù–æ–≤–∏–π —Ç–∞–π–º–µ—Ä
    );

    MergeController.Instance.ResetPresets(); // —Å–∫–∏–¥–∞—î —Ü—ñ–Ω–∏

    // 5. –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–ª—é—î–º–æ –º–∞–≥–∞–∑–∏–Ω
    StorePanel storePanel = GameObject.FindFirstObjectByType<StorePanel>();
    if (storePanel != null)
    {
        storePanel.RebuildStore();
        Debug.Log("üõí –ú–∞–≥–∞–∑–∏–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ –ø—ñ—Å–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É");
    }
    else
    {
        Debug.LogWarning("‚ö†Ô∏è StorePanel –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî –º–∞–≥–∞–∑–∏–Ω –Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–æ");
    }

    Debug.Log("üîÑ –ü—Ä–æ–≥—Ä–µ—Å –ø–æ–≤–Ω—ñ—Å—Ç—é —Å–∫–∏–Ω—É—Ç–æ");

    // 6. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∏ –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ UI —ñ –ø–æ–ª—è –≥—Ä–∏
    SceneManager.LoadScene(SceneManager.GetActiveScene().name);
}

public void AddBrickSlot()
{
    GameController gameController = GameObject.FindFirstObjectByType<GameController>();
    if (gameController != null)
    {
        gameController.AddBrickSlot();
    }
    else
    {
        Debug.LogWarning("‚ùå GameController –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    }
}


}